apiVersion: v1
kind: Secret
metadata:
  name: logstash-secret
  labels:
    app: logstash
data:
  # base64 -w 0 kafka.p12
  kafka.p12: 
  # base64 -w 0 truststore.p12
  truststore.p12: 
  # base64 -w 0 es-ca.pem
  es-ca.pem: 

  # echo -n PASSWORD | base64
  ks.password: Y29uZmlkZW50aWFs
  ts.password: Y29uZmlkZW50aWFs
  es.username: ZWxhc3RpYw==
  es.password: ejY3SlZ6WDRONUF5MFZETDhSbVRK
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  labels:
    kubernetes.io/cluster-service: "true"
data:
  logstash.yml: |-
    http.host: "0.0.0.0"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-pipeline
  labels:
    kubernetes.io/cluster-service: "true"
data:
  k8s.conf: |-
    input {
      kafka {
          bootstrap_servers         => "kafka-0.kafka-svc:9192,kafka-1.kafka-svc:9192,kafka-2.kafka-svc:9192"
          topics                    => "k8s"
          auto_offset_reset         => "latest"
          consumer_threads          => 3
          decorate_events           => true
          security_protocol         => "SSL"
          ssl_keystore_location     => "/etc/logstash/ssl/kafka.p12"
          ssl_keystore_password     => "${SSL_KEYSTORE_PASSWORD}"
          ssl_keystore_type         => "PKCS12"
          ssl_truststore_type       => "PKCS12"
          ssl_truststore_location   => "/etc/logstash/ssl/truststore.p12"
          ssl_truststore_password   => "${SSL_TRUSTSTORE_PASSWORD}"
          codec => json {
              charset => "UTF-8"
          }
      }
    }

    filter {
        ruby {
            code => "event.set('local_date', event.get('@timestamp').time.utc+8*60*60)"
        }

        mutate {
            convert => ["local_date", "string"]
            gsub => ["local_date", "T([\S\s]*?)Z", ""]
            gsub => ["local_date", "-", "."]
        }
    }

    output {
        elasticsearch {
            hosts     => ["https://es-client:9200"]
            index     => "%{[fields][topic]}_%{[kubernetes][namespace]}_%{[kubernetes][container][name]}_%{local_date}"
            user      => "${ES_USERNAME}"
            password  => "${ES_PASSWORD}"
            ssl       => true
            cacert    => "/etc/logstash/ssl/es-ca.pem"
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash

spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:7.7.0
        imagePullPolicy: Always
        env:
        - name:  SSL_KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              key:  ks.password
              name: logstash-secret
        - name:  SSL_TRUSTSTORE_PASSWORD 
          valueFrom:
            secretKeyRef:
              key:  ts.password
              name: logstash-secret
        - name:  ES_USERNAME
          valueFrom:
            secretKeyRef:
              key:  es.username
              name: logstash-secret
        - name:  ES_PASSWORD 
          valueFrom:
            secretKeyRef:
              key:  es.password
              name: logstash-secret
        ports:
        - containerPort: 5044
        - containerPort: 9600
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: "1"
            memory: 2Gi
        volumeMounts:
        - mountPath: /usr/share/logstash/pipeline
          name: pipeline
        - mountPath: /usr/share/logstash/config/logstash.yml
          name: config
          subPath: logstash.yml
        - name: kafka-tls
          mountPath: /etc/logstash
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: logstash-config
      - name: pipeline
        configMap:
          name: logstash-pipeline
      - name: kafka-tls
        secret:
          secretName: logstash-secret 
          items:
          - key:  kafka.p12 
            path: ssl/kafka.p12
          - key:  truststore.p12
            path: ssl/truststore.p12
          - key:  es-ca.pem 
            path: ssl/es-ca.pem 